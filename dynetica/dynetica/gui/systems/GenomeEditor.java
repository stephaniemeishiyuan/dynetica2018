/*
 * GenomeEditor.java
 *
 * Created on April 10, 2001, 12:09 PM
 */

package dynetica.gui.systems;

import dynetica.system.*;
import dynetica.entity.*;
import javax.swing.*;
import java.io.*;
import java.lang.reflect.*;
import java.beans.*;
import java.awt.*;
import java.awt.event.*;
import dynetica.event.*;

/**
 * 
 * @author Lingchong You
 * @version 0.01
 */
public class GenomeEditor extends javax.swing.JPanel {
    Genome genome;
    DefaultListModel elements = new DefaultListModel();
    DefaultComboBoxModel elementTypes = new DefaultComboBoxModel();

    /** Creates new customizer GenomeEditor */
    public GenomeEditor(Genome genome) {
        this.genome = genome;
        setupListModel();
        setupComboBoxModel();
        initComponents();
        elementList.addMouseListener(new PopupListener());
        if (elements.getSize() > 0)
            elementList.setSelectedIndex(0);
        this.addSystemStructureChangeListener(new SystemStructureChangeListener() {
            public void systemStructureChanged(SystemStructureChangeEvent e) {
                System.out.println("Genome Changed");
                setupListModel();
                if (elements.getSize() > 0) {
                    elementList.setSelectedIndex(Math.min(
                            elementList.getSelectedIndex(),
                            elements.getSize() - 1));
                }
            }
        });
    }

    public void addSystemStructureChangeListener(SystemStructureChangeListener l) {
        genome.addSystemStructureChangeListener(l);
    }

    private void setupComboBoxModel() {
        String[] types = { "Gene", "GenomeEnd", "Promoter", "RNASplicingSite",
                "Spacer", "Terminator" };
        for (int i = 0; i < types.length; i++) {
            elementTypes.addElement(types[i]);
        }

    }

    private void setupListModel() {
        if (!elements.isEmpty())
            elements.removeAllElements();
        // System.out.println(genome.getElements().size());
        for (int i = 0; i < genome.getElements().size(); i++) {
            elements.addElement(((GeneticElement) (genome.getElements().get(i)))
                    .getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed"
    // desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        geMenu = new javax.swing.JPopupMenu();
        renameItem = new javax.swing.JMenuItem();
        deleteItem = new javax.swing.JMenuItem();
        genomePane = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        elementsLabel = new javax.swing.JLabel();
        elementPane = new javax.swing.JScrollPane();
        elementList = new javax.swing.JList();
        elementEditorPane = new javax.swing.JScrollPane();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        addBox = new javax.swing.JComboBox();
        removeButton = new javax.swing.JButton();

        renameItem.setText("Rename");
        renameItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameItemActionPerformed(evt);
            }
        });
        geMenu.add(renameItem);

        deleteItem.setText("Delete");
        deleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemActionPerformed(evt);
            }
        });
        geMenu.add(deleteItem);

        setLayout(new java.awt.BorderLayout());

        genomePane.setDividerSize(5);

        jPanel1.setLayout(new java.awt.BorderLayout());

        elementsLabel.setText("Genetic Elements");
        jPanel1.add(elementsLabel, java.awt.BorderLayout.NORTH);

        elementList.setModel(elements);
        elementList.setDoubleBuffered(true);
        elementList.setValueIsAdjusting(true);
        elementList
                .addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                    public void valueChanged(
                            javax.swing.event.ListSelectionEvent evt) {
                        elementListValueChanged(evt);
                    }
                });
        elementPane.setViewportView(elementList);

        jPanel1.add(elementPane, java.awt.BorderLayout.CENTER);

        genomePane.setLeftComponent(jPanel1);
        genomePane.setRightComponent(elementEditorPane);

        add(genomePane, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setLayout(new java.awt.FlowLayout());
        jToolBar1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        jLabel1.setText("New");
        jToolBar1.add(jLabel1);

        addBox.setModel(elementTypes);
        addBox.setName("Add Element"); // NOI18N
        addBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBoxActionPerformed(evt);
            }
        });
        jToolBar1.add(addBox);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(removeButton);

        add(jToolBar1, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteItemActionPerformed
        deleteItems();
    }// GEN-LAST:event_deleteItemActionPerformed

    private void renameItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_renameItemActionPerformed
        renameElement();
    }// GEN-LAST:event_renameItemActionPerformed

    private void elementListValueChanged(
            javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_elementListValueChanged
        setSelectedElement();
    }// GEN-LAST:event_elementListValueChanged

    private void addBoxActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addBoxActionPerformed
        try {
            GeneticElement element = (GeneticElement) (Class
                    .forName("dynetica.entity." + addBox.getSelectedItem())
                    .newInstance());
            String newName = JOptionPane.showInputDialog("Enter new name");
            element.setName(newName);
            element.setSystem(genome);
            // genome.insert(element);
            // elements.addElement(newName);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_addBoxActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_removeButtonActionPerformed
        deleteItems();
    }// GEN-LAST:event_removeButtonActionPerformed

    private void deleteItems() {
        //
        // remove the selected items
        //
        int ind = elementList.getMinSelectionIndex();

        Object[] values = elementList.getSelectedValues();
        for (int i = 0; i < values.length; i++) {
            String oldValue = (String) values[i];
            genome.remove((String) values[i]);
            elements.removeElement(values[i]);
        }

        if (!elements.isEmpty()) {
            ind = Math.min(elements.size() - 1, ind); // set the new selected
                                                      // item
            elementList.setSelectedIndex(ind);
            setSelectedElement();
        }
    }

    private void renameElement() {
        int ind = elementList.getSelectedIndex();
        GeneticElement ge = (GeneticElement) (genome.get(((String) elements
                .elementAt(ind))));
        String newName = (String) JOptionPane.showInputDialog(this,
                "Enter the new name ", "Input", JOptionPane.QUESTION_MESSAGE,
                null, null, ge.getName());
        if (newName.length() > 0) {
            ge.setName(newName);
            elements.setElementAt(newName, ind);
        }
        setSelectedElement();
    }

    private void setSelectedElement() {
        int ind = elementList.getSelectedIndex();
        String elementName = ((String) elements.elementAt(ind));
        javax.swing.JPanel elementEditor = ((GeneticElement) (genome
                .get(elementName))).editor();
        elementEditorPane.setViewportView(elementEditor);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox addBox;
    private javax.swing.JMenuItem deleteItem;
    private javax.swing.JScrollPane elementEditorPane;
    private javax.swing.JList elementList;
    private javax.swing.JScrollPane elementPane;
    private javax.swing.JLabel elementsLabel;
    private javax.swing.JPopupMenu geMenu;
    private javax.swing.JSplitPane genomePane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton removeButton;
    private javax.swing.JMenuItem renameItem;

    // End of variables declaration//GEN-END:variables

    class PopupListener extends MouseAdapter {
        public void mousePressed(MouseEvent e) {
            showPopup(e);
        }

        public void mouseReleased(MouseEvent e) {
            showPopup(e);
        }

        private void showPopup(MouseEvent e) {
            if (e.isPopupTrigger()) {
                geMenu.show(e.getComponent(), e.getX(), e.getY());
            }
        }
    }

    public static class Tester {
        public static void main(java.lang.String args[]) {
            System.out.println("OK here");
            java.io.File sysFile = new java.io.File(args[0]);
            dynetica.system.GeneticSystem gs = new dynetica.system.GeneticSystem();
            try {
                Genome g = (Genome) (SystemBuilder.build(sysFile, gs));
                System.out.println(g);
                // g.setSystem(gs);
                // System.out.println(g.getFullGenome());
                // g.printGenes();
                JPanel jp = new GenomeEditor(g);
                JFrame jf = new JFrame(g.getName());
                jf.getContentPane().add(jp);
                jf.pack();
                jf.show();
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println(e.getMessage());
            }

        }
    }
}
