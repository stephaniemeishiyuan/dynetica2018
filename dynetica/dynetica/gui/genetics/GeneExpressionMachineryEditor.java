/*
 * GeneExpressionMachineryEditor.java
 *
 * Created on August 14, 2001, 12:00 PM
 */

package dynetica.gui.genetics;

import dynetica.entity.*;

/**
 * 
 * @author Lingchong You
 * @version 0.01
 */
public class GeneExpressionMachineryEditor extends javax.swing.JPanel {

    private GeneExpressionMachinery gem;

    /** Creates new form GeneExpressionMachineryEditor */
    public GeneExpressionMachineryEditor(GeneExpressionMachinery gem) {
        this.gem = gem;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed"
    // desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        elongationLabel = new javax.swing.JLabel();
        spacingLabel = new javax.swing.JLabel();
        initialValueLabel = new javax.swing.JLabel();
        minLabel = new javax.swing.JLabel();
        maxLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        elongationField = new javax.swing.JTextField();
        spacingField = new javax.swing.JTextField();
        initialValueField = new javax.swing.JTextField();
        minField = new javax.swing.JTextField();
        maxField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        nameLabel.setText("<html> <i>" + gem.getShortClassName() + " </i> "
                + gem.getName());
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setPreferredSize(new java.awt.Dimension(240, 30));
        nameLabel.setMinimumSize(new java.awt.Dimension(240, 30));
        nameLabel.setMaximumSize(new java.awt.Dimension(240, 30));
        add(nameLabel, java.awt.BorderLayout.NORTH);

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setDividerSize(1);

        jPanel2.setLayout(new java.awt.GridLayout(5, 1, 2, 2));

        elongationLabel.setText("Elongation rate");
        elongationLabel
                .setToolTipText("The elongation rate of the ribosome (in AA residues per second)");
        elongationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        elongationLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        elongationLabel.setPreferredSize(new java.awt.Dimension(100, 25));
        elongationLabel.setMaximumSize(new java.awt.Dimension(400, 25));
        jPanel2.add(elongationLabel);

        spacingLabel.setText("Minimum spacing");
        spacingLabel
                .setToolTipText("The minimum spacing that's required between neighboring ribsomes\nalong the mRNA being translated.");
        spacingLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        spacingLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        spacingLabel.setPreferredSize(new java.awt.Dimension(100, 25));
        spacingLabel.setMaximumSize(new java.awt.Dimension(400, 25));
        jPanel2.add(spacingLabel);

        initialValueLabel.setText("Initial level");
        initialValueLabel
                .setToolTipText("The initial level (concentration of number of molecules)\nof the ribosome.");
        initialValueLabel
                .setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        initialValueLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        initialValueLabel.setPreferredSize(new java.awt.Dimension(100, 25));
        initialValueLabel.setMaximumSize(new java.awt.Dimension(400, 25));
        jPanel2.add(initialValueLabel);

        minLabel.setText("Minimum level");
        minLabel.setToolTipText("The minimum level of the substance.");
        minLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        minLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        minLabel.setPreferredSize(new java.awt.Dimension(100, 25));
        minLabel.setMaximumSize(new java.awt.Dimension(400, 25));
        jPanel2.add(minLabel);

        maxLabel.setText("Maximum level");
        maxLabel.setToolTipText("The maximum level of the substance.");
        maxLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        maxLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        maxLabel.setPreferredSize(new java.awt.Dimension(100, 25));
        maxLabel.setMaximumSize(new java.awt.Dimension(400, 25));
        jPanel2.add(maxLabel);

        jSplitPane1.setLeftComponent(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(5, 1, 2, 2));

        elongationField.setText(gem.getElongationRate().toString());
        elongationField.setPreferredSize(new java.awt.Dimension(100, 25));
        elongationField.setMaximumSize(new java.awt.Dimension(400, 25));
        elongationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elongationFieldActionPerformed(evt);
            }
        });
        elongationField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                elongationFieldFocusLost(evt);
            }
        });
        jPanel3.add(elongationField);

        spacingField.setText(gem.getSpacing().toString());
        spacingField.setPreferredSize(new java.awt.Dimension(100, 25));
        spacingField.setMaximumSize(new java.awt.Dimension(400, 25));
        spacingField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spacingFieldActionPerformed(evt);
            }
        });
        spacingField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                spacingFieldFocusLost(evt);
            }
        });
        jPanel3.add(spacingField);

        initialValueField.setText(String.valueOf(gem.getInitialValue()));
        initialValueField.setPreferredSize(new java.awt.Dimension(100, 25));
        initialValueField.setMaximumSize(new java.awt.Dimension(400, 25));
        initialValueField
                .addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        initialValueFieldActionPerformed(evt);
                    }
                });
        initialValueField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                initialValueFieldFocusLost(evt);
            }
        });
        jPanel3.add(initialValueField);

        minField.setText(String.valueOf(gem.getMin()));
        minField.setPreferredSize(new java.awt.Dimension(100, 25));
        minField.setMaximumSize(new java.awt.Dimension(400, 25));
        minField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minFieldActionPerformed(evt);
            }
        });
        minField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                minFieldFocusLost(evt);
            }
        });
        jPanel3.add(minField);

        maxField.setText(String.valueOf(gem.getMax()));
        maxField.setPreferredSize(new java.awt.Dimension(100, 25));
        maxField.setMaximumSize(new java.awt.Dimension(400, 25));
        maxField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxFieldActionPerformed(evt);
            }
        });
        maxField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                maxFieldFocusLost(evt);
            }
        });
        jPanel3.add(maxField);

        jSplitPane1.setRightComponent(jPanel3);

        jScrollPane1.setViewportView(jSplitPane1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void spacingFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_spacingFieldFocusLost
        setSpacing();
    }// GEN-LAST:event_spacingFieldFocusLost

    private void spacingFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_spacingFieldActionPerformed
        setSpacing();
    }// GEN-LAST:event_spacingFieldActionPerformed

    private void elongationFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_elongationFieldFocusLost
        setElongationRate();
    }// GEN-LAST:event_elongationFieldFocusLost

    private void elongationFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_elongationFieldActionPerformed
        setElongationRate();
    }// GEN-LAST:event_elongationFieldActionPerformed

    private void maxFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_maxFieldFocusLost
        setMax();
    }// GEN-LAST:event_maxFieldFocusLost

    private void maxFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_maxFieldActionPerformed
        setMax();
    }// GEN-LAST:event_maxFieldActionPerformed

    private void minFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_minFieldFocusLost
        setMin();
    }// GEN-LAST:event_minFieldFocusLost

    private void minFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_minFieldActionPerformed
        setMin();
    }// GEN-LAST:event_minFieldActionPerformed

    private void initialValueFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_initialValueFieldFocusLost
        setInitialValue();
    }// GEN-LAST:event_initialValueFieldFocusLost

    private void initialValueFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_initialValueFieldActionPerformed
        setInitialValue();
    }// GEN-LAST:event_initialValueFieldActionPerformed

    /*
     * private void setName() { String newName = nameField.getText().trim();
     * String oldName = ribosome.getName();
     * ribosome.setName(nameField.getText());
     * this.firePropertyChange("EntityName", oldName, newName); }
     */

    private void setMax() {
        double oldValue = gem.getMax();
        double newValue = Double.parseDouble(maxField.getText());
        if (oldValue != newValue) {
            gem.setMax(newValue);
        }
    }

    private void setMin() {
        double oldValue = gem.getMin();
        double newValue = Double.parseDouble(minField.getText());
        if (oldValue != newValue) {
            gem.setMin(newValue);
        }
    }

    private void setInitialValue() {
        double oldValue = gem.getInitialValue();
        double newValue = Double.parseDouble(initialValueField.getText());
        if (oldValue != newValue) {
            gem.setInitialValue(newValue);
        }
    }

    private void setElongationRate() {
        String oldValue = gem.getElongationRate().toString();
        String newValue = elongationField.getText().trim();
        if (newValue.length() > 0 && !newValue.equals(oldValue)) {

            try {
                gem.setElongationRate(newValue);
            }

            catch (dynetica.expression.IllegalExpressionException iee) {
                System.out.println(iee);
            }

        }
    }

    private void setSpacing() {
        String oldSpacing = gem.getSpacing().toString();
        String newSpacing = spacingField.getText().trim();
        if (newSpacing.length() > 0 && !newSpacing.equals(oldSpacing)) {
            try {
                gem.setSpacing(newSpacing);
            } catch (dynetica.expression.IllegalExpressionException iee) {
                System.out.println(iee);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField elongationField;
    private javax.swing.JLabel elongationLabel;
    private javax.swing.JTextField initialValueField;
    private javax.swing.JLabel initialValueLabel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField maxField;
    private javax.swing.JLabel maxLabel;
    private javax.swing.JTextField minField;
    private javax.swing.JLabel minLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField spacingField;
    private javax.swing.JLabel spacingLabel;
    // End of variables declaration//GEN-END:variables

}
