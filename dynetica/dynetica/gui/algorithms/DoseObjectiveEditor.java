package dynetica.gui.algorithms;

import dynetica.gui.algorithms.ParameterSearchDoseResponseEditor;
import dynetica.entity.*;
import dynetica.system.*;
import dynetica.objective.*;
import java.util.*;
import javax.swing.*;

/**
 * 
 * @author DerekEidum (2013)
 */
public class DoseObjectiveEditor extends javax.swing.JPanel {
    ReactiveSystem system;
    ParameterSearchDoseResponseEditor psdre;

    DefaultComboBoxModel substanceBoxModel = new DefaultComboBoxModel();

    Substance substance;
    AbstractMetric metric;
    AbstractDoseObjective objective;
    TargetDoseObjective targetObjective = null;

    JFrame frame;

    /**
     * Creates new form DoseObjectiveEditor
     */
    public DoseObjectiveEditor(JFrame jf, ParameterSearchDoseResponseEditor e) {
        frame = jf;
        system = e.system;
        psdre = e;
        initComponents();
        setUpList();
        setSubstance();
    }

    public DoseObjectiveEditor(JFrame jf, ParameterSearchDoseResponseEditor e,
            TargetDoseObjective tdo) {
        this(jf, e);
        metric = tdo.getMetric();
        substance = metric.getSubstance();
        substanceSelector.setSelectedItem(substance.getName());
        objective = tdo.getObjective();
        weightField.setText((new Double(tdo.getWeight())).toString());
        updateTarget();
    }

    // Set up the substance selector box
    private void setUpList() {
        List s = system.getSubstances();
        for (Object o : s) {
            Substance sub = (Substance) o;
            substanceBoxModel.addElement(sub.getName());
        }
    }

    // Sets the substance field to whatever substance is selected by the combo
    // box
    private void setSubstance() {
        String name = (String) substanceSelector.getSelectedItem();
        substance = (Substance) system.getEntity(name);
        if (metric != null) {
            metric.setSubstance(substance);
        }
        updateTarget();
    }

    private void updateTarget() {
        if (substance == null) {
            return;
        }
        if (metric == null) {
            targetObjective = null;
            return;
        }
        if (objective == null) {
            targetObjective = null;
            return;
        }
        double weight = Double.parseDouble(weightField.getText());
        if (weight <= 0) {
            targetObjective = null;
            return;
        }
        targetObjective = new TargetDoseObjective(metric, objective, weight);
        textField.setText(targetObjective.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        substanceSelector = new javax.swing.JComboBox();
        metricSelector = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        objectiveSelector = new javax.swing.JComboBox();
        textField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        weightField = new javax.swing.JTextField();

        jLabel1.setText("Substance");

        jLabel2.setText("Metric");

        substanceSelector.setModel(substanceBoxModel);
        substanceSelector
                .addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        substanceSelectorActionPerformed(evt);
                    }
                });

        metricSelector.setModel(new javax.swing.DefaultComboBoxModel(
                new String[] { "Select a metric...", "Final Value",
                        "Time to Steady State", "Area Under Curve",
                        "Maximum Value", "Minimum Value", "Range",
                        "Maximum Rate", " ", " " }));
        metricSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metricSelectorActionPerformed(evt);
            }
        });

        jLabel3.setText("Objective");

        objectiveSelector.setModel(new javax.swing.DefaultComboBoxModel(
                new String[] { "Select an objective...",
                        "Maximally Linear Dose Response",
                        "Maximize Dose Response Range",
                        "Minimize Dose Response Range",
                        "Maximize Distance Between First Extrema",
                        "Maximize Peak to Final Distance", " " }));
        objectiveSelector
                .addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        objectiveSelectorActionPerformed(evt);
                    }
                });

        textField.setEnabled(false);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Weight");

        weightField.setText("1.0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        javax.swing.GroupLayout.Alignment.TRAILING,
                        layout.createSequentialGroup()
                                .addContainerGap(
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        Short.MAX_VALUE)
                                .addComponent(addButton,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        80,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109))
                .addGroup(
                        layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(textField)
                                                .addGroup(
                                                        layout.createSequentialGroup()
                                                                .addGroup(
                                                                        layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(
                                                                                        jLabel1)
                                                                                .addComponent(
                                                                                        jLabel2)
                                                                                .addComponent(
                                                                                        jLabel3))
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                        30,
                                                                        Short.MAX_VALUE)
                                                                .addGroup(
                                                                        layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                                                false)
                                                                                .addComponent(
                                                                                        objectiveSelector,
                                                                                        0,
                                                                                        300,
                                                                                        Short.MAX_VALUE)
                                                                                .addComponent(
                                                                                        substanceSelector,
                                                                                        0,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        Short.MAX_VALUE)
                                                                                .addComponent(
                                                                                        metricSelector,
                                                                                        0,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        Short.MAX_VALUE)))
                                                .addGroup(
                                                        layout.createSequentialGroup()
                                                                .addComponent(
                                                                        jLabel4)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        Short.MAX_VALUE)
                                                                .addComponent(
                                                                        weightField,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        149,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap()));
        layout.setVerticalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel1)
                                                .addComponent(
                                                        substanceSelector,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(
                                                        metricSelector,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(
                                                        objectiveSelector,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel4)
                                                .addComponent(
                                                        weightField,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        Short.MAX_VALUE)
                                .addComponent(addButton).addContainerGap()));
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addButtonActionPerformed
        if (targetObjective == null) {
            JOptionPane.showMessageDialog(null,
                    "Warning: All fields must be defined.", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        psdre.addObjective(targetObjective);
        frame.setVisible(false);
        frame.dispose();
    }// GEN-LAST:event_addButtonActionPerformed

    private void objectiveSelectorActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_objectiveSelectorActionPerformed
        String selected = (String) objectiveSelector.getSelectedItem();
        if (selected.equalsIgnoreCase("Maximally Linear Dose Response")) {
            objective = new LinearDoseResponse();
        } else if (selected.equalsIgnoreCase("Maximize Dose Response Range")) {
            objective = new MaximizeDoseRange();
        } else if (selected.equalsIgnoreCase("Minimize Dose Response Range")) {
            objective = new MinimizeDoseRange();
        } else if (selected
                .equalsIgnoreCase("Maximize Distance Between First Extrema")) {
            objective = new MaximizePeakToPeakDistance();
        } else if (selected.equalsIgnoreCase("Maximize Peak to Final Distance")) {
            objective = new MaximizePeakToFinalDistance();
        }
        updateTarget();
    }// GEN-LAST:event_objectiveSelectorActionPerformed

    private void metricSelectorActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_metricSelectorActionPerformed
        setSubstance();
        String selected = (String) metricSelector.getSelectedItem();
        if (selected.equalsIgnoreCase("Final Value")) {
            metric = new FinalValue(substance);
        } else if (selected.equalsIgnoreCase("Maximum Value")) {
            metric = new MaximumValue(substance);
        } else if (selected.equalsIgnoreCase("Minimum Value")) {
            metric = new MinimumValue(substance);
        } else if (selected.equalsIgnoreCase("Range")) {
            metric = new dynetica.objective.Range(substance);
        } else if (selected.equalsIgnoreCase("Maximum Rate")) {
            metric = new MaximumRate(substance);
        } else if (selected.equalsIgnoreCase("Area Under Curve")) {
            metric = new AreaUnderCurve(substance);
        } else if (selected.equalsIgnoreCase("Time to Steady State")) {
            double fraction = -1;
            while ((fraction < 0) || (fraction > 1)) {
                String fractionInput = JOptionPane.showInputDialog(this,
                        "Fraction of steady state reached? (Between 0 and 1) ");
                fraction = Double.parseDouble(fractionInput);
            }
            metric = new TimeToSteadyState(substance, fraction);
        }
    }// GEN-LAST:event_metricSelectorActionPerformed

    private void substanceSelectorActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_substanceSelectorActionPerformed
        setSubstance();
    }// GEN-LAST:event_substanceSelectorActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox metricSelector;
    private javax.swing.JComboBox objectiveSelector;
    private javax.swing.JComboBox substanceSelector;
    private javax.swing.JTextField textField;
    private javax.swing.JTextField weightField;
    // End of variables declaration//GEN-END:variables
}
