/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dynetica.gui.algorithms;

import dynetica.algorithm.*;
import dynetica.entity.*;
import dynetica.system.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author Xizheng (Billy) Wan (2016)
 */
public class InvasionSimulationEditor extends javax.swing.JPanel {
    
    private InvasionSimulation is;
    private ReactiveSystem system;
    private List<Substance> substances;
    private List<Parameter> parameters;
    private DefaultComboBoxModel coopChoices = new DefaultComboBoxModel();
    private DefaultComboBoxModel cheaterChoices = new DefaultComboBoxModel();
    private DefaultComboBoxModel coopParamChoices = new DefaultComboBoxModel();
    private DefaultComboBoxModel cheaterParamChoices = new DefaultComboBoxModel();
    private boolean initCellDensityFieldModified = false;
    private boolean initCheaterFractionFieldModified = false;
    
    private Substance cooperator;
    private Substance cheater;
    private Parameter coopParam;
    private Parameter cheaterParam;
    private double initCellDensity;
    private double initCheaterFraction;
    private int numPoints = 20;
    private double simTime = 100;
    /**
     * Creates new form InvasionSimulationEditor
     */
    public InvasionSimulationEditor(ReactiveSystem sys) {
        system = sys;
        substances = sys.getSubstances();
        parameters = sys.getParameters();
        setupDropdownLists();
        initComponents();
    }

    private void setupDropdownLists() {
        coopChoices.addElement("Choose Species");
        cheaterChoices.addElement("Choose Species");
        for (Substance s : substances) {
            coopChoices.addElement(s.getName());
            cheaterChoices.addElement(s.getName());
        }
        coopParamChoices.addElement("Choose Parameter");
        cheaterParamChoices.addElement("Choose Parameter");
        for (Parameter p : parameters) {
            if (p instanceof SimulationTimer) continue;
            coopParamChoices.addElement(p.getName());
            cheaterParamChoices.addElement(p.getName());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        buttonPanel = new javax.swing.JPanel();
        runButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        plotButton = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        labelPanel = new javax.swing.JPanel();
        systemLabel = new javax.swing.JLabel();
        coopSpeciesLabel = new javax.swing.JLabel();
        cheaterSpeciesLabel = new javax.swing.JLabel();
        initCellDensityLabel = new javax.swing.JLabel();
        initCheaterFractionLabel = new javax.swing.JLabel();
        coopParamLabel = new javax.swing.JLabel();
        coopMinValueLabel = new javax.swing.JLabel();
        coopMaxValueLabel = new javax.swing.JLabel();
        cheaterParamLabel = new javax.swing.JLabel();
        cheaterMinValueLabel = new javax.swing.JLabel();
        cheaterMaxValueLabel = new javax.swing.JLabel();
        numPointsLabel = new javax.swing.JLabel();
        simTimeLabel = new javax.swing.JLabel();
        valuePanel = new javax.swing.JPanel();
        systemName = new javax.swing.JLabel();
        coopSelectionBox = new javax.swing.JComboBox();
        cheaterSelectionBox = new javax.swing.JComboBox();
        initCellDensityField = new javax.swing.JTextField();
        initCheaterFractionField = new javax.swing.JTextField();
        coopParamSelectionBox = new javax.swing.JComboBox();
        coopMinValueField = new javax.swing.JTextField();
        coopMaxValueField = new javax.swing.JTextField();
        cheaterParamSelectionBox = new javax.swing.JComboBox();
        cheaterMinValueField = new javax.swing.JTextField();
        cheaterMaxValueField = new javax.swing.JTextField();
        numPointsField = new javax.swing.JTextField();
        simTimeField = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(600, 500));
        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(425);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setMinimumSize(new java.awt.Dimension(500, 400));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(600, 500));

        buttonPanel.setMinimumSize(new java.awt.Dimension(100, 75));
        buttonPanel.setPreferredSize(new java.awt.Dimension(600, 75));
        buttonPanel.setSize(new java.awt.Dimension(600, 75));

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(runButton);

        pauseButton.setText("Pause");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(pauseButton);

        plotButton.setText("Plot");
        plotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plotButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(plotButton);

        jSplitPane1.setBottomComponent(buttonPanel);

        jSplitPane2.setDividerLocation(200);
        jSplitPane2.setDividerSize(1);

        labelPanel.setPreferredSize(new java.awt.Dimension(200, 425));
        labelPanel.setSize(new java.awt.Dimension(200, 425));
        labelPanel.setLayout(new java.awt.GridLayout(13, 1));

        systemLabel.setText("System");
        labelPanel.add(systemLabel);

        coopSpeciesLabel.setText("Cooperator Species");
        labelPanel.add(coopSpeciesLabel);

        cheaterSpeciesLabel.setText("Cheater Species");
        labelPanel.add(cheaterSpeciesLabel);

        initCellDensityLabel.setText("Initial Cell Density");
        labelPanel.add(initCellDensityLabel);

        initCheaterFractionLabel.setText("Initial Cheater Fraction");
        labelPanel.add(initCheaterFractionLabel);

        coopParamLabel.setText("Cooperator Parameter");
        labelPanel.add(coopParamLabel);

        coopMinValueLabel.setText("Minimum Value");
        labelPanel.add(coopMinValueLabel);

        coopMaxValueLabel.setText("Maximum Value");
        labelPanel.add(coopMaxValueLabel);

        cheaterParamLabel.setText("Cheater Parameter");
        labelPanel.add(cheaterParamLabel);

        cheaterMinValueLabel.setText("Minimum Value");
        labelPanel.add(cheaterMinValueLabel);

        cheaterMaxValueLabel.setText("Maximum Value");
        labelPanel.add(cheaterMaxValueLabel);

        numPointsLabel.setText("Number of Points");
        numPointsLabel.setToolTipText("");
        labelPanel.add(numPointsLabel);

        simTimeLabel.setText("Simulation Time");
        labelPanel.add(simTimeLabel);

        jSplitPane2.setLeftComponent(labelPanel);

        valuePanel.setPreferredSize(new java.awt.Dimension(400, 425));
        valuePanel.setSize(new java.awt.Dimension(400, 425));
        valuePanel.setLayout(new java.awt.GridLayout(13, 1));

        systemName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        systemName.setText(system.getName());
        valuePanel.add(systemName);

        coopSelectionBox.setModel(coopChoices);
        coopSelectionBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coopSelectionBoxActionPerformed(evt);
            }
        });
        valuePanel.add(coopSelectionBox);

        cheaterSelectionBox.setModel(cheaterChoices);
        cheaterSelectionBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheaterSelectionBoxActionPerformed(evt);
            }
        });
        valuePanel.add(cheaterSelectionBox);

        initCellDensityField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        initCellDensityField.setText("Please enter the initial cell density");
        initCellDensityField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                initCellDensityFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                initCellDensityFieldFocusLost(evt);
            }
        });
        valuePanel.add(initCellDensityField);

        initCheaterFractionField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        initCheaterFractionField.setText("Please enter the initial cheater fraction");
        initCheaterFractionField.setToolTipText("");
        initCheaterFractionField.setActionCommand("<Not Set>");
        initCheaterFractionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                initCheaterFractionFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                initCheaterFractionFieldFocusLost(evt);
            }
        });
        valuePanel.add(initCheaterFractionField);

        coopParamSelectionBox.setModel(coopParamChoices);
        coopParamSelectionBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coopParamSelectionBoxActionPerformed(evt);
            }
        });
        valuePanel.add(coopParamSelectionBox);

        coopMinValueField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        coopMinValueField.setText("0.0");
        coopMinValueField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                coopMinValueFieldFocusLost(evt);
            }
        });
        valuePanel.add(coopMinValueField);

        coopMaxValueField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        coopMaxValueField.setText("1.0");
        coopMaxValueField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                coopMaxValueFieldFocusLost(evt);
            }
        });
        valuePanel.add(coopMaxValueField);

        cheaterParamSelectionBox.setModel(cheaterParamChoices);
        cheaterParamSelectionBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheaterParamSelectionBoxActionPerformed(evt);
            }
        });
        valuePanel.add(cheaterParamSelectionBox);

        cheaterMinValueField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cheaterMinValueField.setText("0.0");
        cheaterMinValueField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cheaterMinValueFieldFocusLost(evt);
            }
        });
        valuePanel.add(cheaterMinValueField);

        cheaterMaxValueField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cheaterMaxValueField.setText("1.0");
        cheaterMaxValueField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cheaterMaxValueFieldFocusLost(evt);
            }
        });
        valuePanel.add(cheaterMaxValueField);

        numPointsField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        numPointsField.setText("20");
        numPointsField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                numPointsFieldFocusLost(evt);
            }
        });
        valuePanel.add(numPointsField);

        simTimeField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        simTimeField.setText("100");
        simTimeField.setToolTipText("");
        simTimeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                simTimeFieldFocusLost(evt);
            }
        });
        valuePanel.add(simTimeField);

        jSplitPane2.setRightComponent(valuePanel);

        jSplitPane1.setLeftComponent(jSplitPane2);

        add(jSplitPane1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void initCellDensityFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_initCellDensityFieldFocusGained
        // TODO add your handling code here:
        if (! initCellDensityFieldModified) {
            initCellDensityField.setText("");
        }
    }//GEN-LAST:event_initCellDensityFieldFocusGained

    private void initCellDensityFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_initCellDensityFieldFocusLost
        // TODO add your handling code here:
        // set bool to true if some value is entered
        if (initCellDensityField.getText().isEmpty()) {
            initCellDensityField.setText("Please enter the initial cell density");
            initCellDensityFieldModified = false;
            initCellDensity = 0.0;
        } 
        else {
            try {
                initCellDensity = Double.parseDouble(initCellDensityField.getText());
                initCellDensityFieldModified = true;
            }
            catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this.getRootPane().getParent(),
                        "Please enter a valid value!");
                if (! initCellDensityFieldModified) {
                    initCellDensityField.setText("Please enter the initial cell density");
                }
                else {
                    initCellDensityField.setText(String.valueOf(initCellDensity));
                }
            }
        }
    }//GEN-LAST:event_initCellDensityFieldFocusLost

    private void initCheaterFractionFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_initCheaterFractionFieldFocusGained
        // TODO add your handling code here:
        if (! initCheaterFractionFieldModified) {
            initCheaterFractionField.setText("");
        }
    }//GEN-LAST:event_initCheaterFractionFieldFocusGained

    private void initCheaterFractionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_initCheaterFractionFieldFocusLost
        // TODO add your handling code here:
        if (initCheaterFractionField.getText().isEmpty()) {
            initCheaterFractionField.setText("Please enter the initial cheater fraction");
            initCheaterFractionFieldModified = false;
            initCheaterFraction = 0.0;
        }
        else {
            try {
                initCheaterFraction = Double.parseDouble(initCheaterFractionField.getText());
                initCheaterFractionFieldModified = true;
            }
            catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this.getRootPane().getParent(),
                        "Please enter a valid value!");
                if (! initCheaterFractionFieldModified) {
                    initCheaterFractionField.setText("Please enter the initial cheater fraction");
                }
                else {
                    initCheaterFractionField.setText(String.valueOf(initCheaterFraction));
                }
            }
        }
    }//GEN-LAST:event_initCheaterFractionFieldFocusLost

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        // TODO add your handling code here:
        is = new InvasionSimulation(system, cooperator, cheater, coopParam, 
        cheaterParam, initCellDensity, initCheaterFraction, numPoints, simTime, false);
        is.start();
    }//GEN-LAST:event_runButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        // TODO add your handling code here:
        if (is != null) {
            is.pause();
        }
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void plotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plotButtonActionPerformed
        // TODO add your handling code here:
        if (is.isFinished()) {
            is.plot();
        }
        else {
            JOptionPane.showMessageDialog(this, "Please wait for the simulation"
                    + "to finish", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_plotButtonActionPerformed

    private void coopSelectionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coopSelectionBoxActionPerformed
        // TODO add your handling code here:
        String name = (String) coopSelectionBox.getSelectedItem();
        if (name.equals("Choose Species")) {
            JOptionPane.showMessageDialog(this, "Please choose a species",
                        "Error", JOptionPane.ERROR_MESSAGE);
        } 
        else {
            cooperator = system.getSubstance(name);
        }
    }//GEN-LAST:event_coopSelectionBoxActionPerformed

    private void cheaterSelectionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheaterSelectionBoxActionPerformed
        // TODO add your handling code here:
        String name = (String) cheaterSelectionBox.getSelectedItem();
        if (name.equals("Choose Species")) {
            JOptionPane.showMessageDialog(this, "Please choose a species",
                        "Error", JOptionPane.ERROR_MESSAGE);
        } 
        else {
            cheater = system.getSubstance(name);
        }
    }//GEN-LAST:event_cheaterSelectionBoxActionPerformed

    private void coopParamSelectionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coopParamSelectionBoxActionPerformed
        // TODO add your handling code here:
        String name = (String) coopParamSelectionBox.getSelectedItem();
        if (name.equals("Choose Parameter")) {
            JOptionPane.showMessageDialog(this, "Please choose a parameter",
                        "Error", JOptionPane.ERROR_MESSAGE);
        } 
        else {
            coopParam = system.getParameter(name);
            coopParam.setMin(0.0);
            coopParam.setMax(1.0);
        }
    }//GEN-LAST:event_coopParamSelectionBoxActionPerformed

    private void coopMinValueFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_coopMinValueFieldFocusLost
        // TODO add your handling code here:
        try {
            double min = Double.parseDouble(coopMinValueField.getText());
            coopParam.setMin(min);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this.getRootPane().getParent(),
                        "Please enter a valid value!");
        }
    }//GEN-LAST:event_coopMinValueFieldFocusLost

    private void coopMaxValueFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_coopMaxValueFieldFocusLost
        // TODO add your handling code here:
        try {
            double max = Double.parseDouble(coopMaxValueField.getText());
            coopParam.setMax(max);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this.getRootPane().getParent(),
                        "Please enter a valid value!");
        }
    }//GEN-LAST:event_coopMaxValueFieldFocusLost

    private void cheaterParamSelectionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheaterParamSelectionBoxActionPerformed
        // TODO add your handling code here:
        String name = (String) cheaterParamSelectionBox.getSelectedItem();
        if (name.equals("Choose Parameter")) {
            JOptionPane.showMessageDialog(this, "Please choose a parameter",
                        "Error", JOptionPane.ERROR_MESSAGE);
        } 
        else {
            cheaterParam = system.getParameter(name);
            cheaterParam.setMin(0.0);
            cheaterParam.setMax(1.0);
        }
    }//GEN-LAST:event_cheaterParamSelectionBoxActionPerformed

    private void cheaterMinValueFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cheaterMinValueFieldFocusLost
        // TODO add your handling code here:
        try {
            double min = Double.parseDouble(cheaterMinValueField.getText());
            cheaterParam.setMin(min);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this.getRootPane().getParent(),
                        "Please enter a valid value!");
        }
    }//GEN-LAST:event_cheaterMinValueFieldFocusLost

    private void cheaterMaxValueFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cheaterMaxValueFieldFocusLost
        // TODO add your handling code here:
        try {
            double max = Double.parseDouble(cheaterMaxValueField.getText());
            cheaterParam.setMax(max);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this.getRootPane().getParent(),
                        "Please enter a valid value!");
        }
    }//GEN-LAST:event_cheaterMaxValueFieldFocusLost

    private void simTimeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_simTimeFieldFocusLost
        // TODO add your handling code here:
        try {
            simTime = Double.parseDouble(simTimeField.getText());
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this.getRootPane().getParent(),
                        "Please enter a valid value!");
        }
    }//GEN-LAST:event_simTimeFieldFocusLost

    private void numPointsFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numPointsFieldFocusLost
        // TODO add your handling code here:
        try {
            numPoints = Integer.parseInt(numPointsField.getText());
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this.getRootPane().getParent(),
                        "Please enter a valid value!");
        }
    }//GEN-LAST:event_numPointsFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JTextField cheaterMaxValueField;
    private javax.swing.JLabel cheaterMaxValueLabel;
    private javax.swing.JTextField cheaterMinValueField;
    private javax.swing.JLabel cheaterMinValueLabel;
    private javax.swing.JLabel cheaterParamLabel;
    private javax.swing.JComboBox cheaterParamSelectionBox;
    private javax.swing.JComboBox cheaterSelectionBox;
    private javax.swing.JLabel cheaterSpeciesLabel;
    private javax.swing.JTextField coopMaxValueField;
    private javax.swing.JLabel coopMaxValueLabel;
    private javax.swing.JTextField coopMinValueField;
    private javax.swing.JLabel coopMinValueLabel;
    private javax.swing.JLabel coopParamLabel;
    private javax.swing.JComboBox coopParamSelectionBox;
    private javax.swing.JComboBox coopSelectionBox;
    private javax.swing.JLabel coopSpeciesLabel;
    private javax.swing.JTextField initCellDensityField;
    private javax.swing.JLabel initCellDensityLabel;
    private javax.swing.JTextField initCheaterFractionField;
    private javax.swing.JLabel initCheaterFractionLabel;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JTextField numPointsField;
    private javax.swing.JLabel numPointsLabel;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton plotButton;
    private javax.swing.JButton runButton;
    private javax.swing.JTextField simTimeField;
    private javax.swing.JLabel simTimeLabel;
    private javax.swing.JLabel systemLabel;
    private javax.swing.JLabel systemName;
    private javax.swing.JPanel valuePanel;
    // End of variables declaration//GEN-END:variables
}
